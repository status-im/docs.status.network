"use strict";(self.webpackChunkstatus_network_docs=self.webpackChunkstatus_network_docs||[]).push([[9900],{7594:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"tutorials/deploying-contracts/using-hardhat","title":"Using Hardhat with Status Network","description":"Step-by-step tutorial for deploying smart contracts on Status Network using Hardhat and TypeScript. Learn about project setup, configuration, and contract deployment.","source":"@site/docs/tutorials/deploying-contracts/using-hardhat.md","sourceDirName":"tutorials/deploying-contracts","slug":"/tutorials/deploying-contracts/using-hardhat","permalink":"/tutorials/deploying-contracts/using-hardhat","draft":false,"unlisted":false,"editUrl":"https://github.com/status-im/docs.status.network/tree/develop/docs/tutorials/deploying-contracts/using-hardhat.md","tags":[],"version":"current","lastUpdatedAt":1739996952000,"frontMatter":{"title":"Using Hardhat with Status Network","description":"Step-by-step tutorial for deploying smart contracts on Status Network using Hardhat and TypeScript. Learn about project setup, configuration, and contract deployment.","keywords":["Hardhat tutorial","smart contract deployment","Status Network development","TypeScript","blockchain development","web3 development"]},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udd0e Block Explorers","permalink":"/tools/block-explorers"},"next":{"title":"\u2692\ufe0f Using Foundry","permalink":"/tutorials/deploying-contracts/using-foundry"}}');var o=n(4848),a=n(8453);const i={title:"Using Hardhat with Status Network",description:"Step-by-step tutorial for deploying smart contracts on Status Network using Hardhat and TypeScript. Learn about project setup, configuration, and contract deployment.",keywords:["Hardhat tutorial","smart contract deployment","Status Network development","TypeScript","blockchain development","web3 development"]},s="Using Hardhat to Deploy Smart Contracts",l={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"What You&#39;ll Accomplish",id:"what-youll-accomplish",level:2},{value:"Steps",id:"steps",level:2},{value:"1. Initialize a Hardhat TypeScript Project",id:"1-initialize-a-hardhat-typescript-project",level:3},{value:"2. Writing the Smart Contract",id:"2-writing-the-smart-contract",level:3},{value:"3. Configuring Hardhat for Status Network",id:"3-configuring-hardhat-for-status-network",level:3},{value:"4. Create Ignition Deployment Module",id:"4-create-ignition-deployment-module",level:3},{value:"5. Deploy the Contract",id:"5-deploy-the-contract",level:3},{value:"7. Interact with Your Contract",id:"7-interact-with-your-contract",level:3},{value:"Support",id:"support",level:2}];function d(t){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"using-hardhat-to-deploy-smart-contracts",children:"Using Hardhat to Deploy Smart Contracts"})}),"\n",(0,o.jsx)(e.p,{children:"This tutorial will guide you through the process of deploying a smart contract on Status Network testnet using Hardhat, Hardhat Ignition, and TypeScript."}),"\n",(0,o.jsx)(e.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsx)(e.p,{children:"Before you begin, ensure you have the following:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Node.js and npm"}),": Download and install from the ",(0,o.jsx)(e.a,{href:"https://nodejs.org/",children:"official Node.js website"})]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Ethereum Wallet"}),": MetaMask or another wallet with a private key for Status Network testnet"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Testnet ETH"}),": You'll need Status Network testnet ETH","\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["Get Status Network testnet ETH from our ",(0,o.jsx)(e.a,{href:"/tools/testnet-faucets",children:"Faucet"})]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Basic Knowledge"}),": Familiarity with Solidity, Hardhat, and command line"]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"what-youll-accomplish",children:"What You'll Accomplish"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"Initialize a TypeScript-based Hardhat project"}),"\n",(0,o.jsx)(e.li,{children:"Write a basic Ethereum smart contract"}),"\n",(0,o.jsx)(e.li,{children:"Configure Hardhat for Status Network testnet deployment"}),"\n",(0,o.jsx)(e.li,{children:"Deploy your smart contract using Hardhat Ignition"}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"steps",children:"Steps"}),"\n",(0,o.jsx)(e.h3,{id:"1-initialize-a-hardhat-typescript-project",children:"1. Initialize a Hardhat TypeScript Project"}),"\n",(0,o.jsx)(e.p,{children:"First, create and set up your project:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"mkdir my-hardhat-project && cd my-hardhat-project\nnpm init -y\nnpm install --save-dev hardhat @nomicfoundation/hardhat-toolbox dotenv\nnpx hardhat init\n"})}),"\n",(0,o.jsx)(e.p,{children:'When prompted, select "Create a TypeScript project" to set up a TypeScript-based Hardhat project.'}),"\n",(0,o.jsx)(e.p,{children:"Set up your environment variables:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'# Create a .env file\ntouch .env\n\n# Add your private key (never commit this file!)\necho "PRIVATE_KEY=your_private_key_here" >> .env\n'})}),"\n",(0,o.jsx)(e.h3,{id:"2-writing-the-smart-contract",children:"2. Writing the Smart Contract"}),"\n",(0,o.jsxs)(e.p,{children:["Create ",(0,o.jsx)(e.code,{children:"contracts/HelloWorld.sol"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-solidity",children:'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\ncontract HelloWorld {\n    string public greet = "Hello, Status Network!";\n\n    function setGreet(string memory _greet) public {\n        greet = _greet;\n    }\n\n    function getGreet() public view returns (string memory) {\n        return greet;\n    }\n}\n'})}),"\n",(0,o.jsx)(e.h3,{id:"3-configuring-hardhat-for-status-network",children:"3. Configuring Hardhat for Status Network"}),"\n",(0,o.jsxs)(e.p,{children:["Update ",(0,o.jsx)(e.code,{children:"hardhat.config.ts"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:'import { HardhatUserConfig } from "hardhat/config";\nimport "@nomicfoundation/hardhat-toolbox";\nimport * as dotenv from "dotenv";\n\ndotenv.config();\n\nconst PRIVATE_KEY = process.env.PRIVATE_KEY || "";\n\nconst config: HardhatUserConfig = {\n  solidity: "0.8.24",\n  networks: {\n    statusTestnet: {\n      url: "https://public.sepolia.rpc.status.network",\n      chainId: 1660990954,\n      accounts: [PRIVATE_KEY],\n    },\n  },\n};\n\nexport default config;\n'})}),"\n",(0,o.jsx)(e.h3,{id:"4-create-ignition-deployment-module",children:"4. Create Ignition Deployment Module"}),"\n",(0,o.jsxs)(e.p,{children:["Create ",(0,o.jsx)(e.code,{children:"ignition/modules/HelloWorld.ts"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:'import { buildModule } from "@nomicfoundation/hardhat-ignition/modules";\n\nexport default buildModule("HelloWorld", (m) => {\n  const helloWorld = m.contract("HelloWorld");\n  \n  return { helloWorld };\n});\n'})}),"\n",(0,o.jsx)(e.h3,{id:"5-deploy-the-contract",children:"5. Deploy the Contract"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"npx hardhat compile\nnpx hardhat ignition deploy ignition/modules/HelloWorld.ts --network statusTestnet\n"})}),"\n",(0,o.jsxs)(e.p,{children:["The deployment will create a new directory ",(0,o.jsx)(e.code,{children:"ignition/deployments"})," containing your deployment artifacts and history."]}),"\n",(0,o.jsx)(e.h3,{id:"7-interact-with-your-contract",children:"7. Interact with Your Contract"}),"\n",(0,o.jsxs)(e.p,{children:["Create ",(0,o.jsx)(e.code,{children:"scripts/interact.ts"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:'import { ethers } from "hardhat";\nimport { HelloWorld } from "../typechain-types";\n\nasync function main() {\n  const contractAddress = "0x0d8a93870494Fa21ec39602f31Aa67C9Fed5604f";\n  const HelloWorld = await ethers.getContractFactory("HelloWorld");\n  const contract = HelloWorld.attach(contractAddress) as HelloWorld;\n\n  // Read current greeting\n  const greeting = await contract.getGreet();\n  console.log("Current greeting:", greeting);\n\n  // Update greeting\n  const tx = await contract.setGreet("Hello from Status Network!");\n  await tx.wait();\n  console.log("Greeting updated!");\n\n  // Read updated greeting\n  const newGreeting = await contract.getGreet();\n  console.log("New greeting:", newGreeting);\n}\n\nmain().catch((error) => {\n  console.error(error);\n  process.exitCode = 1;\n});\n'})}),"\n",(0,o.jsx)(e.p,{children:"Run the interaction script:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"npx hardhat run scripts/interact.ts --network statusTestnet\n"})}),"\n",(0,o.jsx)(e.h2,{id:"support",children:"Support"}),"\n",(0,o.jsx)(e.p,{children:"If you encounter any issues:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["Join our ",(0,o.jsx)(e.a,{href:"https://t.me/statusl2",children:"Telegram Community"})]}),"\n",(0,o.jsxs)(e.li,{children:["View our ",(0,o.jsx)(e.a,{href:"/general-info/network-details",children:"Network Details"})]}),"\n"]})]})}function h(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(d,{...t})}):d(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>i,x:()=>s});var r=n(6540);const o={},a=r.createContext(o);function i(t){const e=r.useContext(a);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:i(t.components),r.createElement(a.Provider,{value:e},t.children)}}}]);